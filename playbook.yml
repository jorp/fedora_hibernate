---
- hosts: localhost
  become: yes
  vars:
    swapfile_path: "/swapfile"

  tasks:
    - name: save memory as bytes
      set_fact:
        mem_bytes: "{{ ansible_memtotal_mb * 1024 * 1024}}"

    - name: touch the file
      file:
        path: "{{ swapfile_path }}"
        state: touch
        owner: root
        group: root
        mode: '0600'
        attributes: "+C"

    - name: fallocate swapfile
      command: fallocate -l "{{mem_bytes}}" "{{ swapfile_path }}"

    - name: mkswap
      command: mkswap "{{ swapfile_path }}"

    - name: turn swap on
      command: swapon "{{ swapfile_path }}"

    - name: add swap to fstab
      lineinfile:
        dest: /etc/fstab
        backup: yes
        state: present
        line: "{{swapfile_path}} none swap sw 0 0"

    - block:
      - name: create directories for overrides
        file:
          path: "{{ item }}"
          state: directory
        loop:
          - /etc/systemd/system/systemd-logind.service.d
          - /etc/systemd/system/systemd-hibernate.service.d

      - name: add logind override
        blockinfile:
          path: /etc/systemd/system/systemd-logind.service.d/override.conf
          create: yes
          block: |
            [Service]
            Environment=SYSTEMD_BYPASS_HIBERNATION_MEMORY_CHECK=1

      - name: add hibernate override
        blockinfile:
          path: /etc/systemd/system/systemd-hibernate.service.d/override.conf
          create: yes
          block: |
            [Service]
            Environment=SYSTEMD_BYPASS_HIBERNATION_MEMORY_CHECK=1

    - name: run container to get offset
      containers.podman.podman_container:
        name: mytest
        image: fedora
        privileged: yes
        detach: no
        rm: yes
        command: 
          - /bin/sh
          - -c
          - | 
              dnf upgrade -y &> /dev/null
              dnf install -y gcc wget &> /dev/null
              wget 'https://raw.githubusercontent.com/osandov/osandov-linux/61679ecd914d653bab14d0e752595e86b9f50513/scripts/btrfs_map_physical.c' &> /dev/null
              gcc -O2 -o btrfs_map_physical btrfs_map_physical.c &> /dev/null
              ./btrfs_map_physical "{{ swapfile_path }}" | sed -n '2p' | awk '{print $NF}'
        state: started
        volume: "{{ swapfile_path }}:{{ swapfile_path }}"
      register: physical_swap_offset

    - name: set physical_swap_offset fact
      set_fact:
        pso: "{{ physical_swap_offset.stdout | trim }}"

    - name: get pagesize
      command: getconf PAGESIZE
      register: ps

    - name: set page size fact
      set_fact:
        page_size: "{{ ps.stdout | trim }}"

    - name: calculate swap offset
      set_fact:
        swap_offset: "{{ (pso|int/page_size|int)|int }}"
      register: swapo

    - name: get swap uuid
      command: findmnt -no UUID -T "{{ swapfile_path }}"
      register: uuid

    - name: set swap_uuid fact
      set_fact:
        swap_uuid: "{{ uuid.stdout | trim }}"

    - name: set resume_args fact
      set_fact:
        resume_args: "resume=UUID={{ swap_uuid }} resume_offset={{ swap_offset }}"

    - name: output resume args
      debug:
        msg: "{{ resume_args }}"

    - name: update grub
      command: grubby --update-kernel=ALL --args="{{ resume_args }}"

    - name: add resume module to dracut
      lineinfile:
        path: /etc/dracut.conf.d/resume.conf
        create: yes
        line: 'add_dracutmodules+=" resume "'

    - name: update initramfs
      command: dracut -f
